#lang racket
(display  "\n\nЗадание 5. Написать функцию, которая для заданных координат X1,Y1 и X2,Y2 возвращает расстояние между ними. Координаты могут иметь
отрицательные значение.")
(display "\nВведите первую точку в формате (x y)")
(define d1 (read))
(display "Введите вторую точку в формате (x y)")
(define d2 (read))
(display "Расстояние: ")
(display (sqrt (+ (expt (- (car d1)(car d2)) 2)(expt (- (last d1)(last d2)) 2))))

(display  "\n\nЗадание 7. Есть список. Найти сумму первого, третьего и седьмого элементов
списка, если указанные элементы – числа, иначе – возвратить последний элемент списка." )
(display "\nВведите список в формате (1 2 3) или (a b c)")
(define a (read))
(if (number? (car a))
       (if (> (length a) 7)
           (and (display "\nСумма первого, третьего и седьмого элементов списка: ")
           (display (+ (list-ref a 0)(list-ref a 2)(list-ref a 6))))
               (display "\nВ листе мение 7 элементов"))
       (and (display "Последний элемент: ") (display (last a))))

(display "\n\nЗадание 12. Есть 2 списка, например, (1 2 3 4 5) и (7 6 5 7). Если произведение первых
элементов исходных списков есть положительное число, то объединить в
результирующий список последние элементы. В противном случае
построить список из последнего элемента первого списка и хвоста
второго.")
(display "\nВведите первый числовой список в формате (1 2 3)")
(define l1 (read))
(display "Введите второй числовой список в формате (-1 2 3)")
(define l2 (read))
(if (> (* (car l1)(car l2)) 0)
    (and (display "Список при положительном произведени: ")
     (display (list (last l1)(last l2))))
       (and (display "Список при отрицательном произведени: ")
        (display (cons (last l1)(cdr l2)))))